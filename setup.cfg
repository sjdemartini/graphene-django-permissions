[flake8]
max-line-length = 88
max-complexity = 18
ignore =
    E121,E123,E126,E226,E24,E704,W503,W504, # Default codes https://flake8.pycqa.org/en/latest/user/options.html#cmdoption-flake8-ignore
    E203, # Per black compatibility recommendation here
          # https://github.com/psf/black/blob/1d8b4d766d912c7b9e91fa885419730c334345ef/docs/compatible_configs.md#flake8
    E501, # Don't enforce max line length, since black handles line-length automatically
          # for code, and disagrees with flake8 and flake8-bugbear in certain situations
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,

[mypy]
python_version = 3.7
check_untyped_defs = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
# For convenience, display the error codes of the violations. Makes it easier to
# `type: ignore[specific-violation]` rather than use sweeping type-ignores.
show_error_codes = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[tox:tox]
isolated_build = true
envlist = py37, py38, py39, py310, format, lint, build

[gh-actions]
python =
    3.10: py310, format, lint, build
    3.9: py39
    3.8: py38
    3.7: py37

[testenv]
allowlist_externals = pytest
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    pytest --cov=graphene_django_permissions --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:format]
allowlist_externals =
    isort
    black
commands =
    isort graphene_django_permissions tests
    black graphene_django_permissions tests

[testenv:lint]
allowlist_externals =
    flake8
    mypy
commands =
    flake8 graphene_django_permissions tests
    mypy graphene_django_permissions tests

[testenv:build]
allowlist_externals =
    poetry
    twine
commands =
    poetry build
    twine check dist/*
