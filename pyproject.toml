[tool]
[tool.poetry]
name = "graphene-django-permissions"
version = "0.1.0"
homepage = "https://github.com/sjdemartini/graphene-django-permissions"
description = "A performant holistic permissions layer for graphene-django/GraphQL."
authors = ["Steven DeMartini <sjdemartini@users.noreply.github.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "graphene_django_permissions" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"

[tool.poetry.dev-dependencies]
black = { version = "^21.5b2" }
isort = { version = "^5.8.0" }
flake8 = { version = "^3.9.2" }
flake8-docstrings = { version = "^1.6.0"  }
mypy = {version = "^0.900" }
pytest = { version = "^6.2.4" }
pytest-cov = { version = "^2.12.0" }
tox = { version = "^3.20.1" }
virtualenv = { version = "^20.2.2" }
pip = { version = "^20.3.1" }
twine = { version = "^3.3.0" }
pre-commit = {version = "^2.12.0" }
toml = {version = "^0.10.2" }
bump2version = {version = "^1.0.1" }

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# Per https://pycqa.github.io/isort/docs/configuration/compatibility_black/ and
# https://github.com/psf/black/blob/1d8b4d766d912c7b9e91fa885419730c334345ef/docs/compatible_configs.md#isort
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
