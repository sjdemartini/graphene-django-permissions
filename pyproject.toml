[tool]
[tool.poetry]
name = "graphene-django-permissions"
version = "0.1.0"
homepage = "https://github.com/sjdemartini/graphene-django-permissions"
description = "A performant holistic permissions layer for graphene-django/GraphQL."
authors = ["Steven DeMartini <sjdemartini@users.noreply.github.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "graphene_django_permissions" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
graphene-django = "^2.15.0"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
mypy = "^0.950"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-django = "^4.5.2"
tox = "^3.25.0"
twine = "^4.0.0"
pre-commit = "^2.19.0"
toml = "^0.10.2"
bump2version = "^1.0.1"
graphene-django-optimizer = "^0.8.0"
factory-boy = "^3.2.1"

[tool.pytest.ini_options]
addopts = "--ds=tests.settings"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]

[tool.black]
line-length = 88
preview = true  # Format strings
target-version = ['py37', 'py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  |
  .*migrations.*  # Never format migrations files
)
'''

[tool.isort]
# Per https://pycqa.github.io/isort/docs/configuration/compatibility_black/ and
# https://github.com/psf/black/blob/1d8b4d766d912c7b9e91fa885419730c334345ef/docs/compatible_configs.md#isort
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
